services:
  postgres:
    image: postgres:16.0
    container_name: postgres
    env_file:
      - .env.prod
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    restart: always
    networks:
      - ll-network

  redis:
    image: redis:6
    container_name: redis
    env_file:
      - .env.prod
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - ll-network

  migration:
    build:
      context: .
      dockerfile: docker/Dockerfile.migration
    env_file:
      - .env.prod
    container_name: migration
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    networks:
      - ll-network

  main-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
    env_file:
      - .env.prod
    ports:
      - "3000:3000"
    container_name: main-api
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    restart: always
    networks:
      - ll-network

volumes:
  postgres-data:
    name: postgres-data
  redis-data:
    name: redis-data
networks:
  ll-network:
    driver: bridge
